// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Tenant {
  id        String   @id @default(cuid())
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  users    User[]
  projects Project[]
  profile  Profile[]
  tasks    Task[]
}

model User {
  id        String   @id @default(cuid())
  name      String
  email     String   @unique
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  projects Project[]
  tasks    Task[]

  tenant   Tenant   @relation(fields: [tenantId], references: [id])
  tenantId String
  profile  Profile?
}

model Profile {
  id        String   @id @default(cuid())
  bio       String?
  avatarUrl String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  tenant   Tenant @relation(fields: [tenantId], references: [id])
  tenantId String
  userId   String @unique
  user     User   @relation(fields: [userId], references: [id])
}

model Project {
  id        String   @id @default(cuid())
  title     String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  tenant   Tenant @relation(fields: [tenantId], references: [id])
  tenantId String

  user   User   @relation(fields: [userId], references: [id])
  userId String

  tasks Task[]
}

model Task {
  id        String   @id @default(cuid())
  title     String
  completed Boolean  @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  parentId String?
  parent   Task?   @relation("TaskToSubtask", fields: [parentId], references: [id])
  subtasks Task[]  @relation("TaskToSubtask")

  user   User   @relation(fields: [userId], references: [id])
  userId String

  project   Project @relation(fields: [projectId], references: [id])
  projectId String

  tenant   Tenant @relation(fields: [tenantId], references: [id])
  tenantId String
}
